// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231021025344_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("SueldoBase")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("cargo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Supervisor",
                            SueldoBase = 0m
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Cajero",
                            SueldoBase = 0m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersonaFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.HasIndex("IdMunicipioFk");

                    b.HasIndex("IdTipoPersonaFk");

                    b.ToTable("cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaRegistro = new DateOnly(2023, 5, 22),
                            IdCliente = "1101622982",
                            IdMunicipioFk = 1,
                            IdTipoPersonaFk = 1,
                            Nombre = "Nicolas"
                        },
                        new
                        {
                            Id = 2,
                            FechaRegistro = new DateOnly(2023, 4, 22),
                            IdCliente = "113451682",
                            IdMunicipioFk = 2,
                            IdTipoPersonaFk = 1,
                            Nombre = "Paco"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("color", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Rojo"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Azul"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Amarillo"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Verde"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPaisFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPaisFk");

                    b.ToTable("Departamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdPaisFk = 1,
                            Nombre = "Santander"
                        },
                        new
                        {
                            Id = 2,
                            IdPaisFk = 1,
                            Nombre = "Antioquia"
                        },
                        new
                        {
                            Id = 3,
                            IdPaisFk = 1,
                            Nombre = "Boyaca"
                        },
                        new
                        {
                            Id = 4,
                            IdPaisFk = 1,
                            Nombre = "Magdalena"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DetalleOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadProducida")
                        .HasColumnType("int");

                    b.Property<int>("CantidadProducir")
                        .HasColumnType("int");

                    b.Property<int>("IdColorFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenFk")
                        .HasColumnType("int");

                    b.Property<int>("IdPrendaFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColorFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdOrdenFk");

                    b.HasIndex("IdPrendaFk");

                    b.ToTable("detalle_orden", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadProducida = 3,
                            CantidadProducir = 10,
                            IdColorFk = 1,
                            IdEstadoFk = 1,
                            IdOrdenFk = 1,
                            IdPrendaFk = 1
                        },
                        new
                        {
                            Id = 2,
                            CantidadProducida = 5,
                            CantidadProducir = 6,
                            IdColorFk = 2,
                            IdEstadoFk = 1,
                            IdOrdenFk = 1,
                            IdPrendaFk = 1
                        },
                        new
                        {
                            Id = 3,
                            CantidadProducida = 10,
                            CantidadProducir = 20,
                            IdColorFk = 4,
                            IdEstadoFk = 1,
                            IdOrdenFk = 1,
                            IdPrendaFk = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdInventarioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdTallaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdVentaFk")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnit")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdInventarioFK");

                    b.HasIndex("IdTallaFk");

                    b.HasIndex("IdVentaFk");

                    b.ToTable("detalle_venta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 2,
                            IdInventarioFK = 1,
                            IdTallaFk = 1,
                            IdVentaFk = 1,
                            ValorUnit = 50000m
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1,
                            IdInventarioFK = 1,
                            IdTallaFk = 2,
                            IdVentaFk = 1,
                            ValorUnit = 5000m
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 1,
                            IdInventarioFK = 1,
                            IdTallaFk = 2,
                            IdVentaFk = 1,
                            ValorUnit = 10000m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<int>("IdCargoFk")
                        .HasColumnType("int");

                    b.Property<string>("IdEmpleado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCargoFk");

                    b.HasIndex("IdEmpleado")
                        .IsUnique();

                    b.HasIndex("IdMunicipioFk");

                    b.ToTable("empleado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaIngreso = new DateOnly(2021, 4, 12),
                            IdCargoFk = 1,
                            IdEmpleado = "1234324",
                            IdMunicipioFk = 2,
                            Nombre = "Juan Carlos"
                        },
                        new
                        {
                            Id = 2,
                            FechaIngreso = new DateOnly(2023, 1, 12),
                            IdCargoFk = 2,
                            IdEmpleado = "44444",
                            IdMunicipioFk = 1,
                            Nombre = "Paco"
                        },
                        new
                        {
                            Id = 3,
                            FechaIngreso = new DateOnly(2022, 9, 20),
                            IdCargoFk = 1,
                            IdEmpleado = "3432",
                            IdMunicipioFk = 2,
                            Nombre = "David"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RepresentanteLegal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipioFk");

                    b.HasIndex("Nit")
                        .IsUnique();

                    b.ToTable("empresa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateOnly(2013, 11, 22),
                            IdMunicipioFk = 1,
                            Nit = "12321423",
                            RazonSocial = "asdfdasf",
                            RepresentanteLegal = "Paco"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateOnly(2020, 11, 22),
                            IdMunicipioFk = 2,
                            Nit = "3433423",
                            RazonSocial = "dsfdsfsda",
                            RepresentanteLegal = "Pedro"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdTipoEstadoFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoEstadoFk");

                    b.ToTable("estado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Produccion",
                            IdTipoEstadoFk = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("forma_pago", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Tarjeta Credito"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Tarjeta Debito"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("genero", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Femenino"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StockMax")
                        .HasColumnType("int");

                    b.Property<int>("StockMin")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnit")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("insumo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Botones",
                            StockMax = 20,
                            StockMin = 10,
                            ValorUnit = 12000m
                        });
                });

            modelBuilder.Entity("Domain.Entities.InsumoPrenda", b =>
                {
                    b.Property<int>("IdPrendaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumoFk")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdPrendaFk", "IdInsumoFk");

                    b.HasIndex("IdInsumoFk");

                    b.ToTable("insumo_prenda", (string)null);

                    b.HasData(
                        new
                        {
                            IdPrendaFk = 1,
                            IdInsumoFk = 1,
                            Cantidad = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.InsumoProveedor", b =>
                {
                    b.Property<int>("IdProveedorFk")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumoFk")
                        .HasColumnType("int");

                    b.HasKey("IdProveedorFk", "IdInsumoFk");

                    b.HasIndex("IdInsumoFk");

                    b.ToTable("insumo_proveedor", (string)null);

                    b.HasData(
                        new
                        {
                            IdProveedorFk = 1,
                            IdInsumoFk = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodInventario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdPrendaFk")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorVtaCop")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("ValorVtaUsd")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CodInventario")
                        .IsUnique();

                    b.HasIndex("IdPrendaFk");

                    b.ToTable("inventario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodInventario = "123",
                            IdPrendaFk = 1,
                            ValorVtaCop = 40000m,
                            ValorVtaUsd = 10m
                        });
                });

            modelBuilder.Entity("Domain.Entities.InventarioTalla", b =>
                {
                    b.Property<int>("IdTallaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdInventarioFK")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdTallaFk", "IdInventarioFK");

                    b.HasIndex("IdInventarioFK");

                    b.ToTable("inventario_talla", (string)null);

                    b.HasData(
                        new
                        {
                            IdTallaFk = 1,
                            IdInventarioFK = 1,
                            Cantidad = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdDeptoFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdDeptoFk");

                    b.ToTable("municipio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdDeptoFk = 1,
                            Nombre = "Bucaramanga"
                        },
                        new
                        {
                            Id = 2,
                            IdDeptoFk = 1,
                            Nombre = "San Gil"
                        },
                        new
                        {
                            Id = 3,
                            IdDeptoFk = 2,
                            Nombre = "Medellin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFk");

                    b.HasIndex("IdEmpleadoFk");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("orden", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateTime(2023, 10, 21, 2, 53, 44, 519, DateTimeKind.Utc).AddTicks(9637),
                            IdClienteFk = 1,
                            IdEmpleadoFk = 1,
                            IdEstadoFk = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("pais", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Colombia"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Prenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdGeneroFk")
                        .HasColumnType("int");

                    b.Property<string>("IdPrenda")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdTipoProteccionFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValorUnitCop")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("ValorUnitUsd")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdGeneroFk");

                    b.HasIndex("IdPrenda")
                        .IsUnique();

                    b.HasIndex("IdTipoProteccionFk");

                    b.ToTable("prenda", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEstadoFk = 1,
                            IdGeneroFk = 1,
                            IdPrenda = "2343",
                            IdTipoProteccionFk = 1,
                            Nombre = "Camiseta Hombre",
                            ValorUnitCop = 100000m,
                            ValorUnitUsd = 25m
                        },
                        new
                        {
                            Id = 2,
                            IdEstadoFk = 1,
                            IdGeneroFk = 2,
                            IdPrenda = "2342343",
                            IdTipoProteccionFk = 1,
                            Nombre = "Camiseta Mujer",
                            ValorUnitCop = 100000m,
                            ValorUnitUsd = 25m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersonaFk")
                        .HasColumnType("int");

                    b.Property<string>("NitProveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipioFk");

                    b.HasIndex("IdTipoPersonaFk");

                    b.HasIndex("NitProveedor")
                        .IsUnique();

                    b.ToTable("proveedor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdMunicipioFk = 1,
                            IdTipoPersonaFk = 1,
                            NitProveedor = "23423",
                            Nombre = "distriRopa"
                        },
                        new
                        {
                            Id = 2,
                            IdMunicipioFk = 2,
                            IdTipoPersonaFk = 1,
                            NitProveedor = "445332",
                            Nombre = "multiRopa"
                        });
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("rolName");

                    b.HasKey("Id");

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Talla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("talla", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "S"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "M"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "L"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "XL"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tipo_estado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Produccion"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Terminado"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tipo_persona", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Persona Natural"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Persona Juridica"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoProteccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tipo_proteccion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Completa"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Tipo 2"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("userRole", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPagoFK")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFk");

                    b.HasIndex("IdEmpleadoFk");

                    b.HasIndex("IdFormaPagoFK");

                    b.ToTable("venta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFk = 1,
                            IdEmpleadoFk = 1,
                            IdFormaPagoFK = 1,
                            Total = 20000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Clientes")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoPersonaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.HasOne("Domain.Entities.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdPaisFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Domain.Entities.DetalleOrden", b =>
                {
                    b.HasOne("Domain.Entities.Color", "Color")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("IdColorFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("IdEstadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Orden", "Orden")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("IdOrdenFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Prenda", "Prenda")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("IdPrendaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Estado");

                    b.Navigation("Orden");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("Domain.Entities.DetalleVenta", b =>
                {
                    b.HasOne("Domain.Entities.Inventario", "Inventario")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdInventarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Talla", "Talla")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdTallaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Venta", "Venta")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdVentaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("Talla");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.HasOne("Domain.Entities.Cargo", "Cargo")
                        .WithMany("Empleados")
                        .HasForeignKey("IdCargoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Empleados")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Domain.Entities.Empresa", b =>
                {
                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Empresas")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.HasOne("Domain.Entities.TipoEstado", "TipoEstado")
                        .WithMany("Estados")
                        .HasForeignKey("IdTipoEstadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEstado");
                });

            modelBuilder.Entity("Domain.Entities.InsumoPrenda", b =>
                {
                    b.HasOne("Domain.Entities.Insumo", "Insumo")
                        .WithMany("InsumosPrenda")
                        .HasForeignKey("IdInsumoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Prenda", "Prenda")
                        .WithMany("InsumosPrenda")
                        .HasForeignKey("IdPrendaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("Domain.Entities.InsumoProveedor", b =>
                {
                    b.HasOne("Domain.Entities.Insumo", "Insumo")
                        .WithMany("InsumosProveedor")
                        .HasForeignKey("IdInsumoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Proveedor", "Proveedor")
                        .WithMany("InsumosProveedor")
                        .HasForeignKey("IdProveedorFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Entities.Inventario", b =>
                {
                    b.HasOne("Domain.Entities.Prenda", "Prenda")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdPrendaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("Domain.Entities.InventarioTalla", b =>
                {
                    b.HasOne("Domain.Entities.Inventario", "Inventario")
                        .WithMany("InventarioTallas")
                        .HasForeignKey("IdInventarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Talla", "Talla")
                        .WithMany("InventarioTallas")
                        .HasForeignKey("IdTallaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("IdDeptoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdClienteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Empleado", "Empleado")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEmpleadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEstadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Domain.Entities.Prenda", b =>
                {
                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany("Prendas")
                        .HasForeignKey("IdEstadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Genero", "Genero")
                        .WithMany("Prendas")
                        .HasForeignKey("IdGeneroFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoProteccion", "TipoProteccion")
                        .WithMany("Prendas")
                        .HasForeignKey("IdTipoProteccionFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Genero");

                    b.Navigation("TipoProteccion");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdTipoPersonaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("UsersRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("IdClienteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Empleado", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("IdEmpleadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("Ventas")
                        .HasForeignKey("IdFormaPagoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("FormaPago");
                });

            modelBuilder.Entity("Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Color", b =>
                {
                    b.Navigation("DetallesOrden");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Navigation("DetallesOrden");

                    b.Navigation("Ordenes");

                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("Domain.Entities.Insumo", b =>
                {
                    b.Navigation("InsumosPrenda");

                    b.Navigation("InsumosProveedor");
                });

            modelBuilder.Entity("Domain.Entities.Inventario", b =>
                {
                    b.Navigation("DetalleVentas");

                    b.Navigation("InventarioTallas");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Empresas");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.Navigation("DetallesOrden");
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Domain.Entities.Prenda", b =>
                {
                    b.Navigation("DetallesOrden");

                    b.Navigation("InsumosPrenda");

                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Navigation("InsumosProveedor");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("Domain.Entities.Talla", b =>
                {
                    b.Navigation("DetalleVentas");

                    b.Navigation("InventarioTallas");
                });

            modelBuilder.Entity("Domain.Entities.TipoEstado", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Domain.Entities.TipoPersona", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Domain.Entities.TipoProteccion", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.Navigation("DetalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
